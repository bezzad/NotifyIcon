<Window x:Class="Samples.Tutorials.MvvmSample.MvvmSampleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Samples.Tutorials.MvvmSample"
        xmlns:tb="clr-namespace:NotifyIconWpf;assembly=NotifyIconWpf"
        Title="MvvmSampleWindow"
        Height="300"
        Width="300">
    <Window.DataContext>
        <local:MvvmSampleViewModel />
    </Window.DataContext>
    <Grid>


        <!-- 
            the NotifyIcon automatically derives the DataContext of it's
            declaring view. Alternatively, you could just assign it manually
        -->
        <tb:TaskbarIcon IconSource="/Icons/Inactive.ico"
                        ToolTipText="{Binding Timestamp}">
            <tb:TaskbarIcon.TrayPopup >
                <!-- the popup, here a custom user control, will also get the DataContext of the NotifyIcon -->
                <local:ClockPopup Opacity="0.8" />
            </tb:TaskbarIcon.TrayPopup>
        </tb:TaskbarIcon>
        
        
        
        <TextBlock TextWrapping="Wrap"
                   Text="MVVM is quite simple - content of the NotifyIcon derive its DataContext. Sample: Hover over the icon in order to see the bound ToolTipText. Click for a richer Popup that is bound to the same property."
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="10,10,10,0" />


    </Grid>
</Window>
